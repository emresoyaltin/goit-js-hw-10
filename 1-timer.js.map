{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst inputEl = document.querySelector('#datetime-picker');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet timerId = null;\nlet userSelectionDate = null;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    const selected = selectedDates[0];\n    if (selected <= new Date()) {\n      startBtn.disabled = true;\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n    } else {\n      startBtn.disabled = false;\n      userSelectionDate = selected;\n    }\n  },\n};\n\nflatpickr(inputEl, options);\n\nstartBtn.addEventListener('click', () => {\n  if (!userSelectionDate) return;\n\n  startBtn.disabled = true;\n  inputEl.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const delta = userSelectionDate - now;\n\n    if (delta <= 0) {\n      clearInterval(timerId);\n      updateTimer({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      inputEl.disabled = false;\n      return;\n    }\n\n    const timeLeft = convertMs(delta);\n    updateTimer(timeLeft);\n  }, 1000);\n});\n\nfunction updateTimer({ days, hours, minutes, seconds }) {\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["startBtn","inputEl","daysEl","hoursEl","minutesEl","secondsEl","timerId","userSelectionDate","options","selectedDates","selected","iziToast","flatpickr","delta","updateTimer","timeLeft","convertMs","days","hours","minutes","seconds","addLeadingZero","value","ms"],"mappings":"2FAMA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAU,KACVC,EAAoB,KAExBP,EAAS,SAAW,GAEpB,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACrB,MAAMC,EAAWD,EAAc,CAAC,EAC5BC,GAAY,IAAI,MAClBV,EAAS,SAAW,GACpBW,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,IAEDX,EAAS,SAAW,GACpBO,EAAoBG,EAEvB,CACH,EAEAE,EAAUX,EAASO,CAAO,EAE1BR,EAAS,iBAAiB,QAAS,IAAM,CAClCO,IAELP,EAAS,SAAW,GACpBC,EAAQ,SAAW,GAEnBK,EAAU,YAAY,IAAM,CAE1B,MAAMO,EAAQN,EADF,IAAI,KAGhB,GAAIM,GAAS,EAAG,CACd,cAAcP,CAAO,EACrBQ,EAAY,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EACzDb,EAAQ,SAAW,GACnB,MACD,CAED,MAAMc,EAAWC,EAAUH,CAAK,EAChCC,EAAYC,CAAQ,CACrB,EAAE,GAAI,EACT,CAAC,EAED,SAASD,EAAY,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtDlB,EAAO,YAAcmB,EAAeJ,CAAI,EACxCd,EAAQ,YAAckB,EAAeH,CAAK,EAC1Cd,EAAU,YAAciB,EAAeF,CAAO,EAC9Cd,EAAU,YAAcgB,EAAeD,CAAO,CAChD,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASN,EAAUO,EAAI,CAMrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}